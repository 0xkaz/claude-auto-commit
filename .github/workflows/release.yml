name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up variables
      id: vars
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Create Release Notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        ## 🚀 Claude Auto-Commit ${{ steps.vars.outputs.TAG }}
        
        ### ✨ Features
        - AI-powered commit message generation using Claude CLI
        - Multi-language support (English, Japanese, Chinese)
        - Automatic daily updates
        - Conventional Commits support
        - Highly configurable options
        
        ### 📦 Installation
        
        **Installation script:**
        ```bash
        curl -fsSL https://raw.githubusercontent.com/0xkaz/claude-auto-commit/main/scripts/install.sh | bash
        ```
        
        **Manual download:**
        ```bash
        # Download the script
        curl -L -o claude-auto-commit https://github.com/0xkaz/claude-auto-commit/releases/download/${{ steps.vars.outputs.TAG }}/claude-auto-commit.sh
        
        # Make executable and install
        chmod +x claude-auto-commit
        sudo mv claude-auto-commit /usr/local/bin/
        ```
        
        ### 📋 Requirements
        - Git repository
        - [Claude CLI](https://docs.anthropic.com/claude/cli) installed and configured
        - Bash shell (macOS, Linux, WSL)
        
        ### 🌐 Documentation
        Visit [claude-auto-commit.0xkaz.com](https://claude-auto-commit.0xkaz.com) for complete documentation.
        EOF
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Claude Auto-Commit ${{ steps.vars.outputs.TAG }}
        body_path: release_notes.md
        files: |
          src/claude-auto-commit.sh
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}